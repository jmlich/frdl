package FRDL;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.application.Action;
import org.joda.time.DateTime;
import org.joda.time.DateTimeZone;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
/**
 * The settings-devices popup dialog box.
 */
public class GpsLoggersInfo extends javax.swing.JDialog {
    String[] tableColumnNames = null;
    String[][] tableData = null;
    

    public GpsLoggersInfo(java.awt.Frame parent) {
        super(parent);
        initComponents();
        getRootPane().setDefaultButton(closeButton);

        readLoggerInfoFromChampionship();
   

    }

    @Action public void closeLoggerInfo() {
        dispose();
    }

     /*
     * this extracts info from championship file about each logger
     * it is in a \n delimited string as the logger.[uuid] property value
     * in the championship file
     * which effectively acts as a history of the loggers seen by this instance of FRDL
     *
     * logger.[uuid]=pilot.compNo|pilot.loggerPriority|pilot.name|pilot.nation|logger.type|lastSeen
     *
     * see also writeLoggerInfoForChampionship() in GpsLogger class which creates this stuff
     */
     private void readLoggerInfoFromChampionship() {
         DateTimeFormatter fmt = DateTimeFormat.forPattern("d MM yyyy HH:mm");
         ArrayList <String> ar = App.thisChampionship.champData.readAllValues("logger.");

         DefaultTableModel model = new DefaultTableModel();
         model.addColumn("Comp No");
         model.addColumn("Logger");
         model.addColumn("Pilot");
         model.addColumn("Nation");
         model.addColumn("Type");
         model.addColumn("Last seen");
        
         for (int i = 0;i < ar.size();i++) {
             String[] st = ar.get(i).split("\n");
             if (st.length == 6) {
                 st[5] = fmt.print(new DateTime(st[5]).withZone(DateTimeZone.UTC));
                 model.insertRow(i, st);
             } else {
                String[] stx = {"0","0","n/a","n/a","n/a","Unknown"};
                model.insertRow(i, stx);
             }
             

         }
        
         loggerInfoTable.setModel(model);
         loggerInfoTable.setAutoCreateRowSorter(true);
     }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        loggerInfoTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(FRDL.App.class).getContext().getResourceMap(GpsLoggersInfo.class);
        setTitle(resourceMap.getString("GpsLoggerInfo.title")); // NOI18N
        setModal(true);
        setName("GpsLoggerInfo"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(FRDL.App.class).getContext().getActionMap(GpsLoggersInfo.class, this);
        closeButton.setAction(actionMap.get("closeLoggerInfo")); // NOI18N
        closeButton.setFont(resourceMap.getFont("closeButton.font")); // NOI18N
        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        loggerInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        loggerInfoTable.setName("loggerInfoTable"); // NOI18N
        jScrollPane1.setViewportView(loggerInfoTable);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(478, Short.MAX_VALUE)
                .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable loggerInfoTable;
    // End of variables declaration//GEN-END:variables
    
}
